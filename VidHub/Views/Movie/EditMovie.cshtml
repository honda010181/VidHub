@using VidHub.Models
@model VidHub.Models.MovieInfo


<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Custom.css" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="~/Scripts/jquery-3.1.1.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>
 
</head>

@if (Model.Title == null)
{
 
    ViewBag.Title = "Add New Movie";
 
    <h2>New Movie</h2>
}
else
{
 
    ViewBag.Title = "Edit Movie";
 
    <h2>Edit Movie</h2>
}


 
@using (Html.BeginForm("EditMovie", "Movie", new { }, FormMethod.Post))
{
    <form>
            <div class="row">
                <div class="col-sm-6 custom-form-inline">
                    <label>Movie Title: </label>
                    @Html.TextBoxFor(x => x.Title, new { Class = "form-control custom-textbox " })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12  custom-form-inline">
                    <label>Movie Descriptions: </label>
                    @Html.TextAreaFor(x => x.Descriptions, new { Class = "form-control custom-textarea " })
                </div>
            </div>
        <div class="form-inline">
            <label>Genre:</label>
            <span>
                <button id="btnAddGenre" type="button" class="btn btn-primary" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Add Genre">+</button>
            </span>
        </div>
            @for (int counter = 0; counter < Model.Genres.Count; counter++)
            {
                if (Model.Genres[counter].GenreID == 0)
                {
                    <div id="NewGenre" class="form-inline  custom-form-inline hidden">
                        @Html.DropDownList("DDLGenre", new SelectList(Model.DropDownGenre, "GenreID", "GenreDesc"), new { Class = "form-control " })
                        @*@Html.DropDownListFor(Model.DropDownGenre.Where(x => x.GenreID), Model.DropDownGenre.Where(x =>x.GenreDesc) , "Select Genre")*@
                        <span>
                            <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeleteMovieGenre", "Movie", new { @movieTitle = Model.Title, @movieGenreID = 0 })'">X</button>
                        </span>
                    </div>
                }
                else
                {
                    <div class="form-inline  custom-form-inline">
                        @Html.TextBoxFor( x => x.Genres[counter].GenreDesc, new { Class = "form-control "})
                        <span>
                            <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeleteMovieGenre", "Movie", new { @movieTitle = Model.Title, @movieGenreID = Model.Genres[counter].MovieGenreID })'">X</button>
                        </span>
                    </div>
                }
            }

        <div class="row">
            <div class="col-sm-12  custom-form-inline">
                <label>Movie Poster: </label>
                @Html.TextBoxFor(x => x.PosterPath, new { Class = "form-control custom-textarea " })
            </div>
        </div>
        <div class="form-inline">
            <label>Directors:</label>
            <span>
                <button id="btnAddDirector" type="button" class="btn btn-primary" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Add Director">+</button>
            </span>
        </div> 

            @for (int counter = 0; counter < Model.Directors.Count; counter++)
            {
                if (Model.Directors[counter].DirectorID == 0)
                {
                    <div id="NewDirectors" class="form-inline  custom-form-inline hidden">
                        <span>First Name: </span>
                        @Html.TextBoxFor(x => x.Directors[counter].FirstName, new { Class = "form-control ", @Value = "" })
                        <span>Last Name: </span>
                        @Html.TextBoxFor(x => x.Directors[counter].LastName, new { Class = "form-control ", @Value = "" })
                        <span>M: </span>
                        @Html.TextBoxFor(x => x.Directors[counter].MiddleName, new { Class = "form-control ", @Value = "" })
                        <span>
                            <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeletePersonRole", "Movie", new { @movieTitle = Model.Title, @PersonRoleID = 0 })'">X</button>
                        </span>
                    </div>
                }
                else
                {
                    <div class="form-inline  custom-form-inline">
                        <span>First Name: </span>
                        @Html.TextBoxFor(x => x.Directors[counter].FirstName, new { Class = "form-control " })
                        <span>Last Name: </span>
                        @Html.TextBoxFor(x => x.Directors[counter].LastName, new { Class = "form-control " })
                        <span>M: </span>
                        @Html.TextBoxFor(x => x.Directors[counter].MiddleName, new { Class = "form-control " })
                        <span>
                            <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeletePersonRole", "Movie", new { @movieTitle = Model.Title, @PersonRoleID = Model.Directors[counter].DirectorRoleID })'">X</button>
                        </span>
                    </div>
                }


            }
 
        <div class="form-inline">
            <label>Cast Members:</label>
            <span>
                <button id="btnAddCastMember" class="btn btn-primary" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Add Cast Member">+</button>
            </span>
        </div> 
            @for (int counter = 0; counter < Model.CastMembers.Count; counter++)
            {
                if(Model.CastMembers[counter].CastMemberID == 0)
                {
                    <div id="NewCastMember" class="form-inline custom-form-inline hidden">
                        <span>First Name: </span>
                        @Html.TextBoxFor(x => x.CastMembers[counter].FirstName, new { Class = "form-control", @Value = "" } )
                        <span>Last Name: </span>
                        @Html.TextBoxFor(x => x.CastMembers[counter].LastName, new { Class = "form-control", @Value = "" })
                        <span>M: </span>
                        @Html.TextBoxFor(x => x.CastMembers[counter].MiddleName, new { Class = "form-control", @Value = "" })
                        <span>
                            <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeletePersonRole", "Movie", new { @movieTitle = Model.Title, @PersonRoleID = 0 })'">X</button>
                        </span>
                    </div>
                }
                else
                {
                    <div class="form-inline custom-form-inline">
                        <span>First Name: </span>
                        @Html.TextBoxFor(x => x.CastMembers[counter].FirstName, new { Class = "form-control" })
                        <span>Last Name: </span>
                        @Html.TextBoxFor(x => x.CastMembers[counter].LastName, new { Class = "form-control" })
                        <span>M: </span>
                        @Html.TextBoxFor(x => x.CastMembers[counter].MiddleName, new { Class = "form-control" })

                        @*location.href='@Url.Action("EditUser", "ReferralTarget", new { @id = user.ID }*@
                        <span>
                            <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeletePersonRole", "Movie", new { @movieTitle = Model.Title, @PersonRoleID = Model.CastMembers[counter].CastRoleID })'">X</button>
                        </span>
                    </div>

                }

            }
        <div class="form-inline">
            <span>
                <label style="padding-top:25px;">Movie Links:</label>
            </span>
            <span>
                <button id="btnAddMovieLink" class="btn btn-primary" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Add Links">+</button>
            </span>
            @*<span class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown"  >
                    Add Links
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="#">Add 1</a></li>
                    <li><a href="#">Add 5</a></li>
                    <li><a href="#">Add 10</a></li>
                </ul>
            </span>*@
        </div>  
            @for (int counter = 0; counter < Model.MovieLinkInfo.Count;counter++ )
            {

                if (Model.MovieLinkInfo[counter].MovieLinkID == 0)
                {
                    <p style="font:bolder;">
                        Link @counter:
                        <span style="visibility:hidden">@Html.TextBoxFor(x => x.MovieLinkInfo[counter].websiteID)</span>
                        <span style="visibility:hidden">@Html.TextBoxFor(x => x.MovieLinkInfo[counter].MovieLinkID)</span>
                    </p>
                    <div id="NewMovieLink" class="form-group custom-movie-edit hidden">
                        <div class="form-inline">
                            <span>Website: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].SouceWebsite, new { Class = "form-control custom-textbox", @Value = "" })
                            <span>Website Link: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].WebsiteLink, new { Class = "form-control custom-textbox", @Value = "" })
                            <span style="float:right">
                                <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeleteMovieLink", "Movie", new { @movieTitle = Model.Title, @movieLinkID = 0 })'">X</button>
                            </span>
                        </div>
                        <span>
                            <span>MovieLink: </span>
                            @Html.TextAreaFor(x => x.MovieLinkInfo[counter].MovieLink, new { Class = "form-control custom-movielink-textbox", @Value = "" })
                        </span>
                        <div class="form-inline">
                            <span>Upvote: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].UpVote, new { Class = "form-control custom-updownvote-textbox", @Value = "" })
                            <span>DownVote: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].DownVote, new { Class = "form-control custom-updownvote-textbox", @Value = "" })
                        </div>
                    </div>
                }
                else
                {
                    <p style="font:bolder;">
                        Link @counter:
                        <span style="visibility:hidden">@Html.TextBoxFor(x => x.MovieLinkInfo[counter].websiteID)</span>
                        <span style="visibility:hidden">@Html.TextBoxFor(x => x.MovieLinkInfo[counter].MovieLinkID)</span>
                    </p>
                    <div class="form-group custom-movie-edit">
                        <div class="form-inline">
                            <span>Website: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].SouceWebsite, new { Class = "form-control custom-textbox" })
                            <span>Website Link: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].WebsiteLink, new { Class = "form-control custom-textbox" })
                            <span style="float:right">
                                <button class="btn btn-danger" type="button" data-html="true" data-toggle="custom-tooltip" data-placement="right" title="Remove" onclick="location.href = '@Url.Action("DeleteMovieLink", "Movie", new { @movieTitle = Model.Title, @movieLinkID = Model.MovieLinkInfo[counter].MovieLinkID })'">X</button>
                            </span>
                        </div>
                        <span>
                            <span>MovieLink: </span>
                            @Html.TextAreaFor(x => x.MovieLinkInfo[counter].MovieLink, new { Class = "form-control custom-movielink-textbox" })
                        </span>
                        <div class="form-inline">
                            <span>Upvote: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].UpVote, new { Class = "form-control custom-updownvote-textbox" })
                            <span>DownVote: </span>
                            @Html.TextBoxFor(x => x.MovieLinkInfo[counter].DownVote, new { Class = "form-control custom-updownvote-textbox" })
                        </div>
                    </div>

                }

            }
    
                 
        <button type="submit">Post Back</button>
    </form>
}
<script>
    $(document).ready(function () {
        $('[data-toggle="custom-tooltip"]').tooltip();
    });
    //Specific Btn click specific element
    $(document).ready(function () {
        $("#btnAddDirector").click(function () {
            $("#NewDirectors").removeClass('hidden');
        });
    });
    $(document).ready(function () {
        $("#btnAddCastMember").click(function () {
            $("#NewCastMember").removeClass('hidden');
        });
    });
    $(document).ready(function () {
        $("#btnAddMovieLink").click(function () {
            $("#NewMovieLink").removeClass('hidden');
        });
    });
    $(document).ready(function () {
        $("#btnAddGenre").click(function () {
            $("#NewGenre").removeClass('hidden');
        });
    });
</script> 